from datetime import datetime, timedelta
from pyspark.sql import SparkSession
from pyspark.sql import functions as F

# Assuming you have a function writetosql() already defined elsewhere
from your_module import writetosql

def get_latest_file_info(spark, hdfs_path):
    """Retrieve the latest modified file that matches specific criteria from HDFS."""
    fs = spark._jvm.org.apache.hadoop.fs.FileSystem.get(spark._jsc.hadoopConfiguration())
    path = spark._jvm.org.apache.hadoop.fs.Path(hdfs_path)
    status = fs.listStatus(path)
    files_with_times = [
        (file.getPath().toString(), datetime.fromtimestamp(file.getModificationTime() / 1000))
        for file in status if file.getPath().getName().startswith("72648") and file.getPath().getName().lower().endswith(".csv")
    ]
    if not files_with_times:
        return None, None
    return sorted(files_with_times, key=lambda x: x[1], reverse=True)[0]

def check_for_new_files(spark, hdfs_path, sql_connection_params):
    """Check for new files and record their processing status in SQL Server."""
    latest_file, latest_mod_time = get_latest_file_info(spark, hdfs_path)
    if not latest_file:
        return False
    
    df = spark.read.format("csv").option("header", "true").load(latest_file)
    processed_on = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    df = df.withColumn("Filename", F.lit(latest_file))
    df = df.withColumn("ProcessedOn", F.lit(processed_on))

    writetosql(df, "ProcessedFilesLog", "dbo", "SQL_SERVER", sql_connection_params)
    return True

def main():
    """Orchestrate the checking and logging of new files."""
    spark = SparkSession.builder.appName("Check New Files in HDFS with Criteria").getOrCreate()
    hdfs_path = "hdfs:///path/to/your/directory"
    sql_connection_params = {"url": "jdbc:sqlserver://server:port", "dbtable": "table", "user": "user", "password": "password"}
    
    new_files_found = check_for_new_files(spark, hdfs_path, sql_connection_params)
    spark.stop()
    
    assert new_files_found, "No new files meeting the criteria were found or file already processed."

if __name__ == "__main__":
    main()
